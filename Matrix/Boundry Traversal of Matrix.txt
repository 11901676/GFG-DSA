class Solution
{
    //Function to return list of integers that form the boundary 
    //traversal of the matrix in a clockwise manner.
    static ArrayList<Integer> boundaryTraversal(int matrix[][], int n, int m)
    {
        // code here 
        ArrayList<Integer> al = new ArrayList<>();
        
        //If there is only one row in the matrix
        if(n == 1)
        {
            for(int i = 0; i < m; i++)
            {
                al.add(matrix[0][i]);
            }
        }
        //If there is only one column in the matrix
        else if(m == 1)
        {
            for(int i = 0; i < n;i++)
            {
                al.add(matrix[i][0]);
            }
        }
        else
        {
            
            //Top Row
            for(int j = 0; j < m; j++)
            {
                al.add(matrix[0][j]);
            }
                
            //Right Column
            for(int j = 1; j < n; j++)
            {
                al.add(matrix[j][m-1]);
            }
            
            
            //Bottom Row
            for(int j = m-2; j >=0; j--)
            {
                al.add(matrix[n-1][j]);
            }
            
            //Left Column
            for(int j = n-2; j > 0; j--)
            {
                al.add(matrix[j][0]);
            }
            
        }
        
        return al;
    }
}