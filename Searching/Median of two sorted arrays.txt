class Solution
{
    //Function to find the median of the two arrays when they get merged.
    public static int findMedian(int arr[], int n, int brr[], int m)
    {
        //Your code here
        
        int begin = 0;
        int end = n;
        while(begin<=end)
        {
            // Dividing array in two sets
            int i1 = (begin + end)/2;
            int i2 = (n+m+1)/2 - i1;
            
            // Now calculating extreme values for checking that ele in set1 <= ele in set2
            int min1 = (i1==n) ? Integer.MAX_VALUE : arr[i1];
            int max1 = (i1==0) ? Integer.MIN_VALUE : arr[i1-1];
            int min2 = (i2==m) ? Integer.MAX_VALUE : brr[i2];
            int max2 = (i2==0) ? Integer.MIN_VALUE : brr[i2-1];
            
            // Checking ele in set1 <= ele in set2
            if((max1 <= min2) && (max2 <= min1))
            {
                if((n+m)%2==0)
                {
                    // In this case one value will be in set1 and other will be in set2
                    return (int)(Math.max(max1, max2)+ Math.min(min1, min2))/2;
                }
                else
                {
                    // In this case mid value will be in set1 as set will contain one extra element
                    return (int)(Math.max(max1, max2));
                }
            }
            else if(max1 > min2)
            {
                end = i1 - 1;
            }
            else if(max2 > min1)
            {
                begin = i1  + 1;
            }
        }
        return 0;
    }
}